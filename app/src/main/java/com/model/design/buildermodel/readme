/**名称*/
建造者模式

/**定义*/
将一个复杂对象的构建和它的表示分离，使得同样的构建过程可以创建不同的表示

/**应用场景*/
·创建一些复杂的对象时，对象内部的构建过程存在复杂变化
·相同的构建过程，不同的执行顺序，产生不同不同结果时
·不同配置的构建对象，产生不同结果时

/**优点*/
·封装性良好，隐藏内部构建细节
·易于解耦，将本产品本身与产品创建过程进行解耦，可以使用相同的创建过程来得到不同的产品，细节依赖抽象
·易于扩展，具体的建造者类之间相互独立，增加新的具体建造者无需修改原有类库的代码
·易于精确控制对象的创建，由于具体的建造者是独立的，因此可以对建造过程逐步细化，而不对其他的模块产生任何影响

/**缺点*/
·产生多余的Build对象以及Director类
·建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，如果产品之间的差异性很大，则不适合使用该模式，因此
其使用的范围受到一定的限制
·如果产品的内部变化复杂吗，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变的很庞大

/**源码参考*/
AlertDialog