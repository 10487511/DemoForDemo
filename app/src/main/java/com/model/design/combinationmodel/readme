/**名称*/
组合模式

/**定义*/
将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性

/**应用场景*/
·表示对象的部分-整体层次结构时
·从一个整体中能够独立出部分模块或功能时

/**优点*/
·高层模块（客户端）调用简单。局部和整体都是同样的结构，客户端无需关心是局部还是整体
·新增节点容易。无需对现有类库进行任何修改，符合开闭原则

/**缺点*/
·不同的组合模式实现有不同的缺点，具体看上面的分析

/**源码分析*/
Android源码中，ViewGroup 和 View就是典型的组合模式

/**安全的组合模式和透明的组合模式*/
·安全的组合模式将职责区分开来放在不同的接口中，这样一来，设计上就比较安全，也遵循了单一职责原则和接口隔离原则，
但是也让客户端必须依赖于具体的实现
·透明的组合模式，以违反单一职责原则和接口隔离原则来换取透明性，但遵循依赖倒置原则，
客户端可以直接依赖于抽象组件即可，将叶子和树枝一视同仁，也就是说，一个元素究竟是枝干节点还是叶子节点，对客户端是透明的

