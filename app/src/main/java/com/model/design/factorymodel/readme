/**名称*/
工厂模式

/**定义*/
定义一个用于创建对象的接口，让子类决定实例化哪个类

/**应用场景*/
·生成复杂对象时，无需知道具体类名，只需知道相应的工厂方法即可

/**优点*/
·符合开放封闭原则，新增产品时，只需要增加相应的具体产品类和相应的工厂子类即可
·符合单一职责原则，每个具体工厂类只负责创建对应的产品

/**缺点*/
·一个具体的工厂只能创建一种具体产品
·增加新产品时，还需要增加相应的工厂类，系统类的个数将成对增加，增加了系统的复杂度和性能开销
·引入的抽象类也会导致类结构的复杂化

/**源码分析*/
·ThreadFactory