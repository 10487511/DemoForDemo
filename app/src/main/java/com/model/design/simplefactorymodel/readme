/**名称*/
简单工厂模式

/**定义*/
定义一个用于创建对象的接口，让子类决定实例化哪个类

/**应用场景*/
·生成复杂对象时，确定只有一个工厂类，可以使用简单工厂模式。如果有多个工厂类，只能使用工厂方法模式

/**优点*/
·代码解耦，创建实例的工作与使用实例的工作分开，使用者不必关系对象如何创建

/**缺点*/
·违背封闭原则，如果需要添加新产品则必须修改工厂类逻辑，会造成工厂逻辑过于复杂
·简单工厂模式使用了静态工厂方法，静态方法不能被继承和重写
·工厂类包含了所有产品的创建逻辑，如果工厂类出错，使用到的地方都会受到影响

/**工厂方法模式与简单工厂模式比较*/
·工厂方法模式有抽象工厂类，简单工厂模式没有抽象工厂类且其工厂类方法是静态的
·工厂方法模式新增产品时只需要新建一个工厂类即可，符合封闭原则，简单工厂模式需要直接修改工厂类，违反了该原则

/**源码分析*/
