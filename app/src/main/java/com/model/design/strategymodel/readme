/**名称*/
策略模式

/**定义*/
定义一系列的算法，把每一个算法封装起来，并且使它们可相互替换，策略模式使得算法可独立于使用它的客户而独立变化

/**应用场景*/
·同一个问题具有不同算法时（具体的实现细节不同时）
·对客户隐藏具体策略（算法）的实现细节，彼此完全独立，提高算法的保密性与安全性
·一个类拥有很多行为，而又需要使用if-else或者switch语句来选择具体行为时，使用策略模式把这些行为独立到具体的策略类中，
可以避免多重选择的结构

/**优点*/
·策略类可相互替换（策略类实现同一个接口）
·耦合度低，方便扩展
·避免使用多重条件选择语句（if-else或者switch语句）

/**缺点*/
·策略的增多会导致子类也会变多
·客户端必须知道所有的策略类，并自行决定使用哪一个

/**源码分析*/
ListView中使用对应的Adapter